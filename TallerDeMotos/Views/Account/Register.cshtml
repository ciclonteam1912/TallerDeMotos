@model TallerDeMotos.ViewModels.RegisterViewModel
@{
    ViewBag.Title = "Registrar Nuevo Usuario";
}
@Html.Partial("_MenuVertical")
<div class="col-lg-9 col-md-9 col-xs-11" id="contenido">
    <h2>@ViewBag.Title.</h2>

    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        <div class="panel panel-default">
            <div class="panel-heading">@ViewBag.Title</div>
            <div class="panel-body">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                    <div class="col-lg-10">
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.UserName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.EmpleadoId, new { @class = "col-md-2 control-label" })
                    <div class="col-md-5">
                        @(Html.Kendo().DropDownList()
                                .Name("EmpleadoId")
                                .DataTextField("NombreCompleto")
                                .DataValueField("Id")
                                .OptionLabel("Seleccione un empleado...")
                                .HtmlAttributes(new { style = "width: 89%" })
                                .Filter("contains")
                                .DataSource(source =>
                                {
                                    source.Read(read => read.Url("/api/empleados/ObtenerEmpleados"));
                                })
                        )
                        <div>
                            @Html.ValidationMessageFor(m => m.EmpleadoId)
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel-footer">
                <button class="btn btn-primary" id="btnGuardar">Guardar</button>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $.validator.setDefaults({
            ignore: "",
            // any other default options and/or rules,
            //errorPlacement: function (error, element) {
            //    console.log("error", error);
            //    console.log("element", element);
            //    if (element.is("[data-role=dropdownlist]")) {
            //        element.closest(".k-widget").after(error);
            //    }
            //}
        });

        function updateCssOnPropertyChange(e) {
            var element = $(e.target);

            element.siblings("span.k-dropdown-wrap")
                   .add(element.siblings("div.k-multiselect-wrap"))
                   .add(element.parent("span.k-numeric-wrap"))
                   .add(element.parent("span.k-picker-wrap"))
                   .toggleClass("k-invalid", element.hasClass("input-validation-error"));
        }

        $(document).ready(function () {
            $("#menuSeguridad").addClass('active');

            UseMutationObserver();
        });
    </script>
}
