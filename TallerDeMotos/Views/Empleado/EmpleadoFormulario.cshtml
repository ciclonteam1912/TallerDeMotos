@model TallerDeMotos.ViewModels.EmpleadoViewModel
@{
    ViewBag.Title = Model.Titulo;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.Partial("_MenuVertical")
<div class="col-lg-9 col-md-9 col-xs-11" id="contenido">
    <h2>@Model.Titulo</h2>

    @using (Html.BeginForm("GuardarEmpleado", "Empleado"))
    {
        @Html.Partial("_Ciudad")
        @Html.Partial("_Cargo")

        <div class="panel panel-default">
            <div class="panel-heading">@Model.Titulo</div>
            <div class="panel-body">
                <div class="row">
                    <h4>@Html.ValidationSummary(true, "¡Por favor solucione los siguientes errores!")</h4>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Nombre) <span class="asterisco">*</span>
                            @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control", placeholder = "Nombre del Empleado...", autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Nombre)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Apellido) <span class="asterisco">*</span>
                            @Html.TextBoxFor(m => m.Apellido, new { @class = "form-control", placeholder = "Apellido del Empleado...", autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Apellido)
                        </div>                        
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.NumeroDocumento) <span class="asterisco">*</span>
                            @Html.TextBoxFor(m => m.NumeroDocumento, new { @class = "form-control", placeholder = "Número de Documento...", autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.NumeroDocumento)
                        </div>                        
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.CargoId) <span class="asterisco">*</span>
                            <br />
                            @(Html.Kendo().DropDownList()
                                .Name("CargoId")
                                .DataTextField("Nombre")
                                .DataValueField("Id")
                                .OptionLabel("Seleccione un cargo...")
                                .HtmlAttributes(new { style = "width: 75%" })
                                .Filter("contains")
                                .DataSource(source =>
                                {
                                    source.Read(read => read.Url("/api/cargos"));
                                })
                            )
                            <button class="btn btn-primary fa fa-plus" data-toggle="modal" data-target="#myModalCargo"></button>
                            <div>@Html.ValidationMessageFor(m => m.CargoId)</div>
                        </div>                        
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Direccion)
                            @Html.TextAreaFor(m => m.Direccion, new { @class = "form-control", placeholder = "Dirección...", autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Direccion)
                        </div>                        
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.CiudadId) <span class="asterisco">*</span>
                            <br />
                            @(Html.Kendo().DropDownList()
                                .Name("CiudadId")
                                .DataTextField("Nombre")
                                .DataValueField("Id")
                                .OptionLabel("Seleccione una ciudad...")
                                .HtmlAttributes(new { style = "width: 75%" })
                                .Filter("contains")
                                .DataSource(source =>
                                {
                                    source.Read(read => read.Url("/api/ciudades"));
                                })
                            )                           
                            <button class="btn btn-primary fa fa-plus" data-toggle="modal" data-target="#myModal"></button>
                            <div>@Html.ValidationMessageFor(m => m.CiudadId)</div>
                        </div>
                    </div>                    
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.CorreoElectronico)
                            @Html.TextBoxFor(m => m.CorreoElectronico, new { @class = "form-control", placeholder = "Correo Electrónico...", autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.CorreoElectronico)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Telefono)
                            @Html.TextBoxFor(m => m.Telefono, new { @class = "form-control", placeholder = "Número de Teléfono...", autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Telefono)
                        </div>                       
                    </div>                    
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Fecha, new { id = "labelFecha" })
                            @Html.TextBoxFor(m => m.Fecha, "{0: dd/MM/yyyy}", new { @class = "form-control", onkeydown = "return false;", style = "width:74%; " })
                        </div>                        
                    </div>                  
                </div>
                <div class="row">                    
                    
                </div>
                <div class="col-lg-6">
                    @Html.HiddenFor(m => m.Id)
                    @Html.AntiForgeryToken()
                </div>
            </div>
            <div class="panel-footer">
                <button class="btn btn-primary" id="btnGuardar">Guardar</button>
            </div>
        </div>
    }
</div>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function maxLengthCheck(object) {
            if (object.value.length > object.max.length)
                object.value = object.value.slice(0, object.max.length);
        }

        var id = $("#Id").val();

        if (id == 0) {
            $.validator.setDefaults({
                ignore: "",
                onkeyup: false
                // any other default options and/or rules,
                //errorPlacement: function (error, element) {
                //    console.log("error", error);
                //    console.log("element", element);
                //    if (element.is("[data-role=dropdownlist]")) {
                //        element.closest(".k-widget").after(error);
                //    }
                //}
            });
        }

        function updateCssOnPropertyChange(e) {
            var element = $(e.target);

            element.siblings("span.k-dropdown-wrap")
                   .add(element.siblings("div.k-multiselect-wrap"))
                   .add(element.parent("span.k-numeric-wrap"))
                   .add(element.parent("span.k-picker-wrap"))
                   .toggleClass("k-invalid", element.hasClass("input-validation-error"));
        }

        $(document).ready(function () {
            UseMutationObserver();

            $("#menuTaller").addClass('active');
            var id = $("#Id").val();
            var ddl = $("#CiudadId").data("kendoDropDownList");
            var ddlCargo = $("#CargoId").data("kendoDropDownList");

            $("#Fecha").kendoDateTimePicker({
                culture: "es-ES",
                format: "dd/MM/yyyy HH:mm",
                animation: {
                    close: {
                        effects: "fadeOut zoom:out",
                        duration: 300
                    },
                    open: {
                        effects: "fadeIn zoom:in",
                        duration: 300
                    }
                },
                value: id == 0 ? new Date() : $("#Fecha").val(),
                dateInput: true,
                attributes: {
                    "width": "68%"
                }
            });

            $('#myModal').on('hidden.bs.modal', function () {
                ddl.dataSource.read();
            });

            $('#myModalCargo').on('hidden.bs.modal', function () {
                ddlCargo.dataSource.read();
            });

            $("#btnGuardar").click(function () {
                $(".k-widget").removeClass("input-validation-error");
            });
        });
    </script>
}