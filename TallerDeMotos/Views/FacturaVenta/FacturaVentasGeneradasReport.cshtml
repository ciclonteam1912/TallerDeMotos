
@using Telerik.Reporting
@using Telerik.ReportViewer.Mvc

@{
    ViewBag.Title = "Reportes de Facturas de Ventas Generadas";
}

@Html.Partial("_MenuVertical")
     <!--kendo.all.min.js can be used as well instead of the following custom Kendo UI subset-->
<script src="@Url.Content("~/ReportViewer/js/telerikReportViewer.kendo-11.1.17.503.min.js")"></script>

<style>
    #reportViewer1 {
        position: relative;
        width: 950px;
        height: 900px;
        font-family: Verdana, Arial;
    }
</style>


<div class="col-lg-9 col-md-9 col-xs-11">
    @(Html.TelerikReporting().ReportViewer()
        // Each report viewer must have an id - it will be used by the initialization script
        // to find the element and initialize the report viewer.
        .Id("reportViewer1")
        // The URL of the service which will serve reports.
        // The URL corresponds to the name of the controller class (ReportsController).
        // For more information on how to configure the service please check http://www.telerik.com/help/reporting/telerik-reporting-rest-conception.html.
        .ServiceUrl(Url.Content("~/api/reports"))
        // The URL for the report viewer template. The template can be edited -
        // new functionalities can be added and unneeded ones can be removed.
        // For more information please check http://www.telerik.com/help/reporting/html5-report-viewer-templates.html.
        // .TemplateUrl(Url.Content("~/ReportViewer/templates/telerikReportViewerTemplate-11.1.17.503.html"))
        // Strongly typed ReportSource - TypeReportSource or UriReportSource.
        .ReportSource(new UriReportSource() { Uri = "FacturaVentasRealizadas.trdp" })
        // Specifies whether the viewer is in interactive or print preview mode.
        // PrintPreview - Displays the paginated report as if it is printed on paper. Interactivity is not enabled.
        // Interactive - Displays the report in its original width and height with no paging. Additionally interactivity is enabled.
        .ViewMode(ViewMode.Interactive)
        // Sets the scale mode of the viewer.
        // Three modes exist currently:
        // FitPage - The whole report will fit on the page (will zoom in or out), regardless of its width and height.
        // FitPageWidth - The report will be zoomed in or out so that the width of the screen and the width of the report match.
        // Specific - Uses the scale to zoom in and out the report.
        .ScaleMode(ScaleMode.Specific)
        // Zoom in and out the report using the scale
        // 1.0 is equal to 100%, i.e. the original size of the report
        .Scale(1.0)
        // Sets whether the viewer’s client session to be persisted between the page’s refreshes(ex. postback).
        // The session is stored in the browser’s sessionStorage and is available for the duration of the page session.
        .PersistSession(false)
        // Sets the print mode of the viewer.
        .PrintMode(PrintMode.AutoSelect)
        .ParameterEditors(
                    editors => editors
                        .CustomEditors(new CustomParameterEditor
                        {
                            MatchFunction = "customMatch",
                            CreateEditorFunction = "createCustomEditor"
                        })
            )
    )
</div>

@section Scripts {
    <script src="@Url.Content("~/ReportViewer/js/telerikReportViewer-11.1.17.503.min.js")"></script>
    <script>
        var dateUpdated = false;// Flag to indicate that date format has been set

        function setDateFormat(dateFormat) {
            var datepicker = $("#reportViewer1").find("[data-role='datepicker']");
            if (datepicker.length > 0) {
                dateUpdated = true;

                for (var i = 0; i < datepicker.length; i += 1) {
                    var dp = $(datepicker[i]).data("kendoDatePicker");
                    var currentFormat = dp.options.format;
                    var oldValue = dp.value();

                    dp.options.format = dateFormat;
                    dp.value(oldValue);
                }
            }
        }

        function onUpdateUi() {
            // Skip if date format already set
            if (!dateUpdated) {
                setDateFormat("dd/MM/yyyy");//SPECIFY THE DATE FORMAT HERE
            }
        }
    </script>
    <script>
        function customMatch(parameter) {
            return parameter.type === "System.DateTime";
        }

        function createCustomEditor(placeholder, options) {
            $(placeholder).html('<input type="datetime"/>');
            var datePicker = $(placeholder),
                                parameter,
                                valueChangedCallback = options.parameterChanged,
                                dropDownList;

            function onChange() {
                var dtv = this.value();
                valueChangedCallback(parameter, dtv);
            }

            return {
                beginEdit: function (param) {
                    parameter = param;

                    var dt = null;
                    try {
                        if (param.value) {
                            dt = param.value;
                        }
                    } catch (e) {
                        dt = null;
                    }

                    $(datePicker).find("input").kendoDatePicker({
                        format: "dd/MM/yyyy",//SPECIFY THE DATE FORMAT HERE
                        change: onChange,
                        value: dt
                    });

                    dropDownList = $(datePicker).find("input").data("kendoDatePicker");
                }
            };
        }
    </script> 
    <script>
        $(document).ready(function () {
            $("#menuReportes").addClass('active');
        });
</script>   
}
