@using TallerDeMotos
@using Telerik.Reporting
@using Telerik.ReportViewer.Mvc
@{
    Layout = null;
}
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Telerik MVC HTML5 Report Viewer</title>

    <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />

    <script src="http://code.jquery.com/jquery-1.9.1.min.js"></script>

    <link href="http://kendo.cdn.telerik.com/2015.3.930/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="http://kendo.cdn.telerik.com/2015.3.930/styles/kendo.blueopal.min.css" rel="stylesheet" />

    <!--kendo.all.min.js can be used as well instead of the following custom Kendo UI subset-->
    <script src="@Url.Content("~/ReportViewer/js/telerikReportViewer.kendo-11.1.17.503.min.js")"></script>

    <style>
        #reportViewer1 {
            position: absolute;
            left: 5px;
            right: 5px;
            top: 40px;
            bottom: 5px;

            font-family: 'segoe ui', 'ms sans serif';

            overflow: hidden;
        }
    </style>

    <script src="@Url.Content("~/ReportViewer/js/telerikReportViewer-11.1.17.503.min.js")"></script>

</head>
<body>
    @*<label>Orden de Compra Nro.:</label>
    <input type="number" id="ordenNro"/>*@
    @*<div id="invoiceIdSelector">
        <label for="invoiceId">Invoices</label>
        <select id="invoiceId" title="Select the Invoice ID">
            <option value="1" selected="selected">1</option>
        </select>
    </div>*@

    <div id="reportViewer1">
        loading...
    </div>

    <script type="text/javascript">
        $(document).ready(function () {
            @*$("#invoiceId").append($('<option></option>').val(@ViewBag.OrdenNro).html(@ViewBag.OrdenNro));*@

            @*$("#invoiceId").val(@ViewBag.OrdenNro);*@
            $("#reportViewer1").telerik_ReportViewer({
                    serviceUrl: "../api/reports/",
                    reportSource: {
                        report: "OrdenCompra.trdp",
                        parameters: { OrdenNro: @ViewBag.OrdenNro }
                    },
            });
            //$("input.k-textbox.trv-parameter-editor-number").val() = 1;
          });

            $('#invoiceId').change(function () {
                var viewer = $("#reportViewer1").data("telerik_ReportViewer");
                viewer.reportSource({
                    report: viewer.reportSource().report,
                    parameters: { OrdenNro: $(this).val() }
                });
                //setting the HTML5 Viewer's reportSource, causes a refresh automatically
                //if you need to force a refresh for other case, use:
                //viewer.refreshReport();
            });
    </script>
@*@(Html.TelerikReporting().ReportViewer()
        // Each report viewer must have an id - it will be used by the initialization script
        // to find the element and initialize the report viewer.
        .Id("reportViewer1")
        // The URL of the service which will serve reports.
        // The URL corresponds to the name of the controller class (ReportsController).
        // For more information on how to configure the service please check http://www.telerik.com/help/reporting/telerik-reporting-rest-conception.html.
        .ServiceUrl(Url.Content("~/api/reports"))
        // The URL for the report viewer template. The template can be edited -
        // new functionalities can be added and unneeded ones can be removed.
        // For more information please check http://www.telerik.com/help/reporting/html5-report-viewer-templates.html.
        // .TemplateUrl(Url.Content("~/ReportViewer/templates/telerikReportViewerTemplate-11.1.17.503.html"))
        // Strongly typed ReportSource - TypeReportSource or UriReportSource.
        .ReportSource(new UriReportSource() { Uri = "OrdenCompra.trdp" })
        // Specifies whether the viewer is in interactive or print preview mode.
        // PrintPreview - Displays the paginated report as if it is printed on paper. Interactivity is not enabled.
        // Interactive - Displays the report in its original width and height with no paging. Additionally interactivity is enabled.
        .ViewMode(ViewMode.Interactive)
        // Sets the scale mode of the viewer.
        // Three modes exist currently:
        // FitPage - The whole report will fit on the page (will zoom in or out), regardless of its width and height.
        // FitPageWidth - The report will be zoomed in or out so that the width of the screen and the width of the report match.
        // Specific - Uses the scale to zoom in and out the report.
        .ScaleMode(ScaleMode.Specific)
        // Zoom in and out the report using the scale
        // 1.0 is equal to 100%, i.e. the original size of the report
        .Scale(1.0)
        // Sets whether the viewer’s client session to be persisted between the page’s refreshes(ex. postback).
        // The session is stored in the browser’s sessionStorage and is available for the duration of the page session.
        .PersistSession(false)
        // Sets the print mode of the viewer.
        .PrintMode(PrintMode.AutoSelect)
)*@

</body>
</html>