@model TallerDeMotos.ViewModels.ProductoViewModel
@{
    ViewBag.Title = Model.Titulo;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.Partial("_MenuVertical")
<div class="col-lg-9 col-md-9 col-xs-11" id="contenido">
    <h2>@Model.Titulo</h2>

    @using (Html.BeginForm("GuardarProducto", "Producto"))
    {
        <div class="panel panel-default">
            <div class="panel-heading">@Model.Titulo</div>
            <div class="panel-body">
                <div class="row">
                    @Html.ValidationSummary(true, "¡Por favor soluciona los siguientes errores!")
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(p => p.ProductoTipoId)
                            @Html.DropDownListFor(p => p.ProductoTipoId, new SelectList(Model.ProductoTipos, "Id", "Descripcion"), "Seleccione un Tipo de Producto", new { @class = "form-control"})
                            @Html.ValidationMessageFor(p => p.ProductoTipoId)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 servicio">
                        <div class="form-group">
                            @Html.LabelFor(p => p.Descripcion)
                            @Html.TextBoxFor(p => p.Descripcion, new { @class = "form-control", placeholder = "Ingrese Descripción del Producto...", autocomplete = "off", maxlength = 50 })
                            @Html.ValidationMessageFor(p => p.Descripcion)
                        </div>
                    </div>
                    <div class="col-lg-6 producto" id="marcaProdutoCol">
                        <div class="form-group">
                            @Html.LabelFor(p => p.Marca)
                            @Html.TextBoxFor(p => p.Marca, new { @class = "form-control", placeholder = "Ingrese Marca del Producto...", autocomplete = "off", maxlength = 50 })
                            @Html.ValidationMessageFor(p => p.Marca)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 producto" id="precioCostoCol">
                        <div class="form-group">
                            @Html.LabelFor(p => p.PrecioCosto)
                            @Html.TextBoxFor(p => p.PrecioCosto, new { @class = "form-control", placeholder = "Ingrese Precio Costo del Producto...", autocomplete = "off", type = "number", min = "1", max = "99999999", oninput = "maxLengthCheck(this)", onkeydown = "return isNumberKey(event)" })
                            @Html.ValidationMessageFor(p => p.PrecioCosto)
                        </div>
                    </div>
                    <div class="col-lg-6 servicio" id="precioVentaCol">
                        <div class="form-group">
                            @Html.LabelFor(p => p.PrecioVenta, new { id = "precioLabel" })
                            @Html.TextBoxFor(p => p.PrecioVenta, new { @class = "form-control", placeholder = "Ingrese Precio Venta del Producto...", autocomplete = "off", type = "number", min = "1", max = "99999999", oninput = "maxLengthCheck(this)", onkeydown = "return isNumberKey(event)" })
                            @Html.ValidationMessageFor(p => p.PrecioVenta)
                        </div>
                    </div>
                </div>
                <div class="row producto">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(p => p.ExistenciaInicial)
                            @Html.TextBoxFor(p => p.ExistenciaInicial, new { @class = "form-control", placeholder = "Ingrese Existencia Inicial del Producto...", autocomplete = "off", type = "number", min = "1", max = "99999", oninput = "maxLengthCheck(this)", onkeydown = "return isNumberKey(event)" })
                            @Html.ValidationMessageFor(p => p.ExistenciaInicial)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(p => p.ExistenciaMinima)
                            @Html.TextBoxFor(p => p.ExistenciaMinima, new { @class = "form-control", placeholder = "Ingrese Existencia Mínima del Producto...", autocomplete = "off", type = "number", min = "1", max = "999", oninput = "maxLengthCheck(this)", onkeydown = "return isNumberKey(event)" })
                            @Html.ValidationMessageFor(p => p.ExistenciaMinima)
                        </div>
                    </div>
                </div>
                <div class="row producto">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(p => p.Iva)
                            @Html.TextBoxFor(p => p.Iva, new { @class = "form-control", placeholder = "Ingrese Iva del Producto o Servicio...", autocomplete = "off", type = "number", min = "0", max = "99", oninput = "maxLengthCheck(this)", onkeydown = "javascript: return event.keyCode == 69 ? false : true" })
                            @Html.ValidationMessageFor(p => p.Iva)
                        </div>
                    </div>
                </div>
                @Html.HiddenFor(p => p.Id)
                @Html.AntiForgeryToken()
            </div>
            <div class="panel-footer">
                <button class="btn btn-primary">Guardar</button>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function maxLengthCheck(object) {
            if (object.value.length > object.max.length)
                object.value = object.value.slice(0, object.max.length);
        }

        function isNumberKey(e) {
            if (!((e.keyCode > 95 && e.keyCode < 106) || (e.keyCode > 47 && e.keyCode < 58) || e.keyCode == 8)) {
                return false;
            }
        }

        $(document).ready(function () {
            $("#menuStock").addClass('active');
            var marcaProductoCol = $("#marcaProdutoCol");
            var precioVentaCol = $("#precioVentaCol");
            var precioCostoCol = $("#precioCostoCol");
            let tipoProducto = $("#ProductoTipoId").val();
            var existenciaInicial = $("#ExistenciaInicial").val();
            var existenciaMinima = $("#ExistenciaMinima").val();

            if ($("#Id").val() != 0) {
                $("#PrecioVenta").prop("readonly", true);
                $("#PrecioCosto").prop("readonly", true);
                $("#ExistenciaInicial").prop("readonly", true);
                $("#ProductoTipoId option:not(:selected)").prop("disabled", true);
            }

            var bandera = false;
            if (tipoProducto == 2) {
                bandera = true;
                marcaProductoCol = marcaProductoCol.replaceWith(precioVentaCol);
                $("#precioLabel").text("Precio de Servicio");
                $("#PrecioVenta").attr("placeholder", "Ingrese Precio del Servicio...");
                $("#Descripcion").attr("placeholder", "Ingrese Descripción del Servicio...");
                $(".servicio").fadeIn(1000);
                $(".producto").fadeOut(1000);
            } else {
                $(".servicio").fadeIn(1000);
                $(".producto").fadeIn(1000);
            }

            var cont = 0;
            $("#ProductoTipoId").change(function () {
                let tipoProducto = $("#ProductoTipoId").val();
                $("#precioLabel").text("Precio Venta");
                $("#PrecioVenta").attr("placeholder", "Ingrese Precio Venta del Producto...");
                $("#Descripcion").attr("placeholder", "Ingrese Descripción del Producto...");
                //if (tipoProducto != "") {                                        
                    if (tipoProducto == 2) {
                        bandera = true;
                        marcaProductoCol = marcaProductoCol.replaceWith(precioVentaCol);
                        $("#precioLabel").text("Precio de Servicio");
                        $("#PrecioVenta").attr("placeholder", "Ingrese Precio del Servicio...");
                        $("#Descripcion").attr("placeholder", "Ingrese Descripción del Servicio...")
                        $(".producto").fadeOut(1000);

                    } else {
                        if (bandera) {
                            bandera = false;
                            precioVentaCol = precioVentaCol.replaceWith(marcaProductoCol);
                            precioCostoCol.after(precioVentaCol);
                            $(".producto").fadeIn(1000);
                        }
                    }
                //}                
            });
        });
    </script>
}