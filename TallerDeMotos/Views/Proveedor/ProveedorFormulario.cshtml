@model TallerDeMotos.ViewModels.ProveedorViewModel
@{
    ViewBag.Title = Model.Titulo;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.Partial("_MenuVertical")
<div class="col-lg-9 col-md-9 col-xs-11" id="contenido">
    <h2>@Model.Titulo</h2>

    <form id="formularioProveedor">
        @Html.Partial("_Ciudad")
        <div class="panel panel-default">
            <div class="panel-heading">@Model.Titulo</div>
            <div class="panel-body">
                <div class="row">
                    <h4>@Html.ValidationSummary(true, "¡Por favor solucione los siguientes errores!")</h4>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.RazonSocial) <span class="asterisco">*</span>
                            @Html.TextBoxFor(m => m.RazonSocial, new { @class = "form-control", placeholder = "Ingrese Razón Social del Proveedor...", maxlength = 50, autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.RazonSocial)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Propietario)
                            @Html.TextBoxFor(m => m.Propietario, new { @class = "form-control", placeholder = "Ingrese Nombre del Propietario...", maxlength = 50, autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Propietario)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Ruc) <span class="asterisco">*</span>
                            @Html.TextBoxFor(m => m.Ruc, new { @class = "form-control", placeholder = "Ingrese Ruc de la Aseguradora...", onkeyup = "format(event)", autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Ruc)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Telefono) <span class="asterisco">*</span>
                            @Html.TextBoxFor(m => m.Telefono, new { @class = "form-control", placeholder = "Ingrese Teléfono de la Aseguradora...", maxlength = 50, autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Telefono)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Direccion) <span class="asterisco">*</span>
                            @Html.TextAreaFor(m => m.Direccion, new { @class = "form-control", placeholder = "Ingrese Dirección de la Aseguradora...", maxlength = 255, autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Direccion)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.CorreoElectronico)
                            @Html.TextBoxFor(m => m.CorreoElectronico, new { @class = "form-control", placeholder = "Ingrese Correo Electrónico de la Aseguradora...", maxlength = 50, autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.CorreoElectronico)
                        </div>
                    </div>
                </div>
                <div class="row">                    
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.CiudadId) <span class="asterisco">*</span>
                            <br />
                            @(Html.Kendo().DropDownList()
                                .Name("CiudadId")
                                .DataTextField("Nombre")
                                .DataValueField("Id")
                                .OptionLabel("Seleccione una ciudad...")
                                .HtmlAttributes(new { style = "width: 75%" })
                                .Filter("contains")
                                .DataSource(source =>
                                {
                                    source.Read(read => read.Url("/api/ciudades/ObtenerCiudades"));
                                })
                            )
                            <button class="btn btn-primary fa fa-plus" data-toggle="modal" data-target="#myModal"></button>
                            <div>@Html.ValidationMessageFor(m => m.CiudadId)</div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <button class="btn btn-link" data-toggle="modal" data-target="#myModalContact">Contactos</button>
                        </div>
                    </div>
                </div>
                @Html.HiddenFor(m => m.Id)
                @Html.AntiForgeryToken()
            </div>
            <div class="panel-footer">
                <button class="btn btn-primary" id="btnGuardar">Guardar</button>
            </div>
        </div>
        @if (Model.Id != 0)
        {
            <div class="modal fade" role="dialog" id="myModalContact">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h3 class="modal-title">Agregar Contacto</h3>
                        </div>
                        <div class="modal-body">
                            <div class="row table-responsive">
                                <table class="table" id="contactDetalle">
                                    <thead>
                                        <tr>
                                            <th>Tipo Contacto</th>
                                            <th>Descripción</th>
                                            <th>&nbsp;</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>
                                                <input id="tipoContactos" style="width:100%" />
                                                <span class="error">Seleccionar Tipo de Contacto</span>
                                            </td>
                                            <td>
                                                <input type="text" id="contactoDesc" readonly class="form-control" />
                                                <span class="error">El campo Descripción es requerido</span>
                                            </td>
                                            <td>
                                                <input type="button" class="btn btn-primary" id="agregar" value="Agregar" />
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>

                            <div id="contactItems">
                                <div class="row table-responsive">
                                    <table id="contactoDetalle" class="table">
                                        <thead>
                                            <tr>
                                                <th style="display:none"></th>
                                                <th>Código</th>
                                                <th>Tipo Contacto</th>
                                                <th>Descripción</th>
                                                <th>&nbsp;</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var contacto in Model.ProveedorContactos)
                                            {
                                                <tr class="detalle">
                                                    <td style="display:none">@contacto.Id</td>
                                                    <td>@contacto.ContactoId</td>
                                                    <td>@contacto.Contacto.Descripcion</td>
                                                    <td>@contacto.Descripcion</td>
                                                    <td class="eliminar-fila"><button class="btn btn-danger eliminar" type="button"><span class="fa fa-remove"></span></button></td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="modal fade" role="dialog" id="myModalContact">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h3 class="modal-title">Agregar Contacto</h3>
                        </div>
                        <div class="modal-body">
                            <div class="row table-responsive">
                                <table class="table" id="contactDetalle">
                                    <thead>
                                        <tr>
                                            <th>Tipo Contacto</th>
                                            <th>Descripción</th>
                                            <th>&nbsp;</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>
                                                <input id="tipoContactos" style="width:100%" />
                                                <span class="error">Seleccionar Tipo de Contacto</span>
                                            </td>
                                            <td>
                                                <input type="text" id="contactoDesc" readonly class="form-control" />
                                                <span class="error">El campo Descripción es requerido</span>
                                            </td>
                                            <td>
                                                <input type="button" class="btn btn-primary" id="agregar" value="Agregar" />
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>

                            <div id="contactItems" style="display:none">
                                <div class="row table-responsive">
                                    <table id="contactoDetalle" class="table">
                                        <thead>
                                            <tr>
                                                <th style="display:none"></th>
                                                <th>Código</th>
                                                <th>Tipo Contacto</th>
                                                <th>Descripción</th>
                                                <th>&nbsp;</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }               
    </form>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var id = $("#Id").val();

        if (id == 0) {
            $.validator.setDefaults({
                ignore: "",
                onkeyup: false
            });
        }
        function updateCssOnPropertyChange(e) {
            var element = $(e.target);

            element.siblings("span.k-dropdown-wrap")
                   .add(element.siblings("div.k-multiselect-wrap"))
                   .add(element.parent("span.k-numeric-wrap"))
                   .add(element.parent("span.k-picker-wrap"))
                   .toggleClass("k-invalid", element.hasClass("input-validation-error"));
        }

        function format(input) {
            if (input.target.value.trim().length > 7 && input.target.value.trim().indexOf('-') != -1) {
                input.target.value = input.target.value.trim().replace('-', '');
                let substring1 = input.target.value.trim().slice(0, 7),
                  substring2 = input.target.value.trim().slice(7, input.target.value.length);
                input.target.value = substring1 + '-' + substring2;
            }
            else if (input.target.value.trim().length > 6 && input.target.value.trim().indexOf('-') === -1) {
                let substring1 = input.target.value.trim().slice(0, 6),
                  substring2 = input.target.value.trim().slice(6, input.target.value.length);
                input.target.value = substring1 + '-' + substring2;
            }   
        }

        $(document).ready(function () {
            UseMutationObserver();
            
            var vm = {
                ProveedorDto: {},
                ProveedorContactos: []
            }

            //Obtener los contactos y agregarlos al Drop-down List.
            var contactsDataSource = new kendo.data.DataSource({
                serverFiltering: false,
                transport: {
                    read: {
                        url: "/api/contactos/ObtenerContactos"
                    }
                }
            });

            var contactos = $("#tipoContactos").kendoDropDownList({
                filter: "eq",
                autoBind: false,
                optionLabel: "Selecciona un tipo de Contacto...",
                dataTextField: "Descripcion",
                dataValueField: "Id",
                dataSource: contactsDataSource,
                change: function () {
                    var value = this.value();
                    $("#contactoDesc").val("");

                    if (value != "") {
                        $("#contactoDesc").prop("readonly", false);
                        $("#contactoDesc").focus();
                    }
                    else {
                        $("#contactoDesc").prop("readonly", true);
                    }
                }
            }).data("kendoDropDownList");

            $("#agregar").click(function () {
                var todoEsValido = true;
                var bandera = false;
                var arreglo = [];

                if ($("#tipoContactos").val() == "") {
                    todoEsValido = false;
                    $('.k-dropdown').siblings('span.error').css('display', 'block');
                } else {
                    $('.k-dropdown').siblings('span.error').css('display', 'none');
                }

                if ($("#contactoDesc").val() == "") {
                    todoEsValido = false;
                    $('#contactoDesc').siblings('span.error').css('display', 'block');
                }
                else {
                    $('#contactoDesc').siblings('span.error').css('display', 'none');
                }

                $('#contactoDetalle tr.detalle').each(function (index, tr) {
                    var lines = $('td', tr).map(function (index, td) {
                        if (index == 0)
                            return $(td).text();
                    });

                    arreglo = lines;
                });

                if (todoEsValido) {
                    $("#contactItems").fadeIn(1000);

                    var contactoId = $("#tipoContactos").val();
                    var contactoTipo = $("#tipoContactos").data("kendoDropDownList").text();
                    var contactoDescripcion = $("#contactoDesc").val();

                    var lineaContacto = '<tr class="detalle">' +
                        '<td style="display:none">0</td>' +
                        '<td>' + contactoId + '</td>' +
                        '<td>' + contactoTipo + '</td>' +
                        '<td>' + contactoDescripcion + '</td>' +
                        '<td class="eliminar-fila"><button class="btn btn-danger eliminar" type="button"><span class="fa fa-remove"></span></button></td>' +
                        '</tr>';

                    $(lineaContacto).hide().appendTo("#contactoDetalle tbody").fadeIn(1000);

                    $("tbody").on("click", ".eliminar", function () {
                        $(this).parents("tr").fadeOut("normal", function () {
                            $(this).remove();
                        });
                    });

                    $("#tipoContactos").data("kendoDropDownList").value("");
                    $("#contactoDesc").val("");
                }
            });

            $("tbody").on("click", ".eliminar", function () {
                $(this).parents("tr").fadeOut("normal", function () {
                    $(this).remove();
                });
            });

            //Agregar validación al formulario al hacer submit.
            $("#formularioProveedor").submit(function (e) {
                e.preventDefault();
                var id = $("#Id").val();
                var form = $(this);
                
                if (form.valid()) {
                    vm.ProveedorDto = {
                        Id: $("#Id").val(),
                        RazonSocial: $("#RazonSocial").val(),
                        Propietario: $("#Propietario").val(),
                        Ruc: $("#Ruc").val(),
                        Direccion: $("#Direccion").val(),
                        Telefono: $("#Telefono").val(),
                        CorreoElectronico: $("#CorreoElectronico").val(),
                        CiudadId: $("#CiudadId").val()
                    };

                    $('#contactoDetalle tr.detalle').each(function (index, tr) {

                        var lines = $('td', tr).map(function (index, td) {
                            if (index != 2 && index != 4) {
                                return $(td).text();
                            }

                        });

                        vm.ProveedorContactos.push({
                            Id: lines[0] == null ? 0 : lines[0],
                            ContactoId: lines[1],
                            Descripcion: lines[2],
                            ProveedorId: $("#Id").val()
                        });

                    });

                    if (vm.ProveedorContactos.length == 0) {
                        toastr.error('Debe agregar al menos un contacto para el proveedor.');
                    }
                    else {
                        $.ajax({
                            url: "/api/proveedores/CrearProveedor",
                            method: "post",
                            data: vm
                        })
                        .done(function (proveedor) {
                            if (proveedor.Success) {
                                //redireccionar a la lista de proveedores                               
                                window.location.href = '/Proveedor';                                
                            }
                            else {
                                vm = {
                                    ProveedorDto: {},
                                    ProveedorContactos: []
                                }
                                toastr.error("<p>Ocurrió algo inesperado</p>");
                            }
                        });
                    }
                    if (id != 0) {
                        console.log(id);
                        $('#formularioProveedor').unbind('submit');
                        $('#formularioProveedor').submit();
                    }
                }                
            });

            $("#menuCompras").addClass('active');

            var ddl = $("#CiudadId").data("kendoDropDownList");

            $('#myModal').on('hidden.bs.modal', function () {
                ddl.dataSource.read();
            });

            $("#btnGuardar").click(function () {
                $(".k-widget").removeClass("input-validation-error");
            });
        });
    </script>
}