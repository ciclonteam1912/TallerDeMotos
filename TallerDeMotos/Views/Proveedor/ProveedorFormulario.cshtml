@model TallerDeMotos.ViewModels.ProveedorViewModel
@{
    ViewBag.Title = Model.Titulo;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.Partial("_MenuVertical")
<div class="col-lg-9 col-md-9 col-xs-11" id="contenido">
    <h2>@Model.Titulo</h2>

    @using (Html.BeginForm("GuardarProveedor", "Proveedor"))
    {
        <div id="myModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h3 class="modal-title">Agregar Ciudad</h3>
                    </div>
                    <div class="modal-body">
                        <div id="example">
                            <div id="grid"></div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">@Model.Titulo</div>
            <div class="panel-body">
                <div class="row">
                    <h4>@Html.ValidationSummary(true, "¡Por favor solucione los siguientes errores!")</h4>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.RazonSocial)
                            @Html.TextBoxFor(m => m.RazonSocial, new { @class = "form-control", placeholder = "Ingrese Razón Social del Proveedor...", maxlength = 50, autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.RazonSocial)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Propietario)
                            @Html.TextBoxFor(m => m.Propietario, new { @class = "form-control", placeholder = "Ingrese Nombre del Propietario...", maxlength = 50, autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Propietario)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Ruc)
                            @Html.TextBoxFor(m => m.Ruc, new { @class = "form-control", placeholder = "Ingrese Ruc de la Aseguradora...", maxlength = 10, autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Ruc)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Contacto)
                            @Html.TextBoxFor(m => m.Contacto, new { @class = "form-control", placeholder = "Ingrese Nombre de Contacto...", maxlength = 50, autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Contacto)
                        </div>                        
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Telefono)
                            @Html.TextBoxFor(m => m.Telefono, new { @class = "form-control", placeholder = "Ingrese Teléfono de la Aseguradora...", maxlength = 50, autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Telefono)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.CorreoElectronico)
                            @Html.TextBoxFor(m => m.CorreoElectronico, new { @class = "form-control", placeholder = "Ingrese Correo Electrónico de la Aseguradora...", maxlength = 50, autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.CorreoElectronico)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Direccion)
                            @Html.TextAreaFor(m => m.Direccion, new { @class = "form-control", placeholder = "Ingrese Dirección de la Aseguradora...", maxlength = 255, autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Direccion)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.CiudadId, new { id = "labelCiudad" })
                            @Html.DropDownListFor(m => m.CiudadId, new SelectList(Model.Ciudades, "Id", "Nombre"), "Seleccionar Ciudad...", new { @class = "form-control", id = "ciudadId" })
                            <button class="btn btn-primary fa fa-plus" data-toggle="modal" data-target="#myModal"></button>
                            <div>@Html.ValidationMessageFor(m => m.CiudadId)</div>
                        </div>
                    </div>
                </div>
                @Html.HiddenFor(m => m.Id)
                @Html.AntiForgeryToken()
            </div>
            <div class="panel-footer">
                <button class="btn btn-primary">Guardar</button>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#menuCompras").addClass('active');

            var dataSource = new kendo.data.DataSource({
                autoSync: false,
                transport: {
                    read: {
                        url: "/api/Ciudades",
                        dataType: "json"
                    },
                    update: {
                        url: "/Ciudad/EditarCiudad",
                        dataType: "json",
                        type: "post"
                    },
                    create: {
                        url: "/Ciudad/CrearCiudad",
                        dataType: "json",
                        type: "post"
                    }
                },
                pageSize: 10,
                serverPaging: false,
                serverSorting: false,
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { editable: false },
                            Nombre: { validation: { required: true } }
                        }
                    }
                }
            });

            $("#grid").kendoGrid({
                dataSource: dataSource,
                pageable: {
                    refresh: true,
                    pageSizes: true,
                    buttonCount: 5
                },
                sortable: true,
                filterable: true,
                height: 500,
                toolbar: ["create", "save", "cancel"],
                columns: [
                    { field: "Nombre", title: "Nombre", width: 120 }
                ],
                editable: true
            });
        });
    </script>
}