@model TallerDeMotos.ViewModels.TalonarioViewModel
@{
    ViewBag.Title = Model.Titulo;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.Partial("_MenuVertical")
<div class="col-lg-9 col-md-9 col-xs-11" id="contenido">
    <h2>@Model.Titulo</h2>

    @using (Html.BeginForm("GuardarTalonario", "Talonario"))
    {
        @Html.Partial("_Sucursal")

        <div class="panel panel-default">
            <div class="panel-heading">@Model.Titulo</div>
            <div class="panel-body">
                <div class="row">
                    <h4>@Html.ValidationSummary(true, "¡Por favor solucione los siguientes errores!")</h4>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(t => t.Timbrado)
                            @Html.TextBoxFor(t => t.Timbrado, new { @class = "form-control", placeholder = "Ingrese Timbrado...", autocomplete = "off" })
                            @Html.ValidationMessageFor(t => t.Timbrado)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(t => t.SucursalId, new { id = "labelSucursal" })
                            @(Html.Kendo().DropDownList()
                                .Name("SucursalId")
                                .DataTextField("NombreCompleto")
                                .DataValueField("Id")
                                .OptionLabel("Seleccione una Sucursal...")
                                .HtmlAttributes(new { style = "width: 75%" })
                                .DataSource(source =>
                                {
                                    source.Read(read => read.Url("/api/sucursales/ObtenerSucursales"));
                                })
                            )
                            <button class="btn btn-primary fa fa-plus" data-toggle="modal" data-target="#myModal"></button>
                            <div>@Html.ValidationMessageFor(t => t.SucursalId)</div>
                        </div>
                    </div>                    
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(t => t.CajaId)
                            @Html.DropDownListFor(t => t.CajaId, new SelectList(Model.Cajas, "Id", "Nombre"), "Seleccionar Caja", new { @class = "form-control", id = "cajaId" })
                            @Html.ValidationMessageFor(t => t.CajaId)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(t => t.FechaIni)
                            @Html.TextBoxFor(t => t.FechaIni, new { @class = "form-control", onkeydown = "return false;", style = "width:74%; " })
                            <div>
                                @Html.ValidationMessageFor(t => t.FechaIni)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(t => t.FechaFin)
                            @Html.TextBoxFor(t => t.FechaFin, new { @class = "form-control", onkeydown = "return false;", style = "width:74%; " })
                            <div>
                                @Html.ValidationMessageFor(t => t.FechaFin)
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(t => t.NumeroFacturaInicial)
                            @Html.TextBoxFor(t => t.NumeroFacturaInicial, new { @class = "form-control", placeholder = "N° Factura Inicial...", autocomplete = "off" })
                            @Html.ValidationMessageFor(t => t.NumeroFacturaInicial)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(t => t.NumeroFacturaFinal)
                            @Html.TextBoxFor(t => t.NumeroFacturaFinal, new { @class = "form-control", placeholder = "N° Factura Final..." , autocomplete = "off" })
                            @Html.ValidationMessageFor(t => t.NumeroFacturaFinal)
                        </div>
                    </div>
                    @*<div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(t => t.NumeroFacturaActual)
                            @Html.TextBoxFor(t => t.NumeroFacturaActual, new { @class = "form-control", placeholder = "N° Factura Actual...", autocomplete = "off" })
                            @Html.ValidationMessageFor(t => t.NumeroFacturaActual)
                        </div>
                    </div>*@
                    <div class="col-lg-6">
                        <div class="checkbox">
                            <label>
                                @Html.CheckBoxFor(t => t.EstaActivo) ¿Se encuentra activo?
                            </label>
                        </div>
                    </div>
                </div>
                @Html.HiddenFor(t => t.Id)
                @Html.AntiForgeryToken()
            </div>
            <div class="panel-footer">
                <button class="btn btn-primary">Guardar</button>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/custom-jquery-validation.js"></script>
    <script>
        function maxLengthCheck(object) {
            if (object.value.length > object.max.length)
                object.value = object.value.slice(0, object.max.length);
        }

        var id = $("#Id").val();

        if (id == 0) {
            $.validator.setDefaults({
                ignore: "",
                onkeyup: false
            });
        }

        function updateCssOnPropertyChange(e) {
            var element = $(e.target);

            element.siblings("span.k-dropdown-wrap")
                   .add(element.siblings("div.k-multiselect-wrap"))
                   .add(element.parent("span.k-numeric-wrap"))
                   .add(element.parent("span.k-picker-wrap"))
                   .toggleClass("k-invalid", element.hasClass("input-validation-error"));
        }

        $(document).ready(function () {
            UseMutationObserver();

            $("#menuVentas").addClass('active');

            var id = $("#Id").val();
            var ddl = $("#SucursalId").data("kendoDropDownList");
            var fechaActual = new Date();
            $("#FechaIni").kendoDatePicker({
                culture: "es-ES",
                value: $("#FechaIni").val(),
                dateInput: true
            });

            $("#FechaFin").kendoDatePicker({
                value: $("#FechaFin").val(),
                culture: "es-ES",
                dateInput: true
            });

            $('#myModal').on('hidden.bs.modal', function () {
                ddl.dataSource.read();
            });
        });
    </script>
}





