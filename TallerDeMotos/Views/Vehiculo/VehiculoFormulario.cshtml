@model TallerDeMotos.ViewModels.VehiculoViewModel
@{
    ViewBag.Title = Model.Titulo;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.Partial("_MenuVertical")
<div class="col-lg-9 col-md-9 col-xs-11" id="contenido">
    <h2>@Model.Titulo</h2>

    @using (Html.BeginForm("GuardarVehiculo", "Vehiculo"))
    {
        <div class="panel panel-default">
            <div class="panel-heading">@Model.Titulo</div>
            <div class="panel-body">
                <div class="row">
                    @Html.ValidationSummary(true, "¡Por favor soluciona los siguientes errores!")
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(v => v.ClienteId) <span class="asterisco">*</span>
                            <br />
                            @(Html.Kendo().DropDownList()
                                .Name("ClienteId")
                                .DataTextField("NombreCompleto")
                                .DataValueField("Id")
                                .OptionLabel("Seleccione un cliente...")
                                .HtmlAttributes(new { style = "width: 75%" })
                                .Filter("contains")
                                .DataSource(source =>
                                {
                                    source.Read(read => read.Url("/api/clientes"));
                                })
                            )                           
                            <div>@Html.ValidationMessageFor(v => v.ClienteId)</div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(v => v.ModeloId) <span class="asterisco">*</span>
                            <br />
                            @(Html.Kendo().DropDownList()
                                .Name("ModeloId")
                                .DataTextField("ModeloCompleto")
                                .DataValueField("Id")
                                .OptionLabel("Seleccione un modelo...")
                                .HtmlAttributes(new { style = "width: 75%" })
                                .Filter("contains")
                                .DataSource(source =>
                                {
                                    source.Read(read => read.Url("/api/modelos"));
                                })
                            )                                                      
                            <div>@Html.ValidationMessageFor(v => v.ModeloId)</div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(v => v.AseguradoraId) <span class="asterisco">*</span>
                            <br />
                            @(Html.Kendo().DropDownList()
                                .Name("AseguradoraId")
                                .DataTextField("Nombre")
                                .DataValueField("Id")
                                .OptionLabel("Seleccione una aseguradora...")
                                .HtmlAttributes(new { style = "width: 75%" })
                                .Filter("contains")
                                .DataSource(source =>
                                {
                                    source.Read(read => read.Url("/api/aseguradoras"));
                                })
                            )                          
                            <div>@Html.ValidationMessageFor(v => v.AseguradoraId)</div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(v => v.CombustibleId) <span class="asterisco">*</span>
                            @Html.DropDownListFor(v => v.CombustibleId, new SelectList(Model.Combustibles, "Id", "Nombre"), "Seleccione un Tipo de Combustible", new { @class = "form-control" })
                            @Html.ValidationMessageFor(v => v.CombustibleId)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(v => v.Matricula) <span class="asterisco">*</span>
                            @Html.TextBoxFor(v => v.Matricula, new { @class = "form-control", placeholder = "Matrícula del Vehículo...", autocomplete = "off" })
                            @Html.ValidationMessageFor(v => v.Matricula)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(v => v.Chasis) <span class="asterisco">*</span>
                            @Html.TextBoxFor(v => v.Chasis, new { @class = "form-control", placeholder = "Chasis del Vehículo...", autocomplete = "off", onkeydown = "javascript: return event.keyCode == 69 ? false : true" })
                            @Html.ValidationMessageFor(v => v.Chasis)
                        </div>
                    </div>

                </div>                
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(v => v.Kilometro)
                            @Html.TextBoxFor(v => v.Kilometro, new { @class = "form-control", placeholder = "Kilómetraje del Vehículo", autocomplete = "off", type = "number", min = "0", max = "99999", oninput = "maxLengthCheck(this)" })
                            @Html.ValidationMessageFor(v => v.Kilometro)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(v => v.Color)
                            @Html.TextBoxFor(v => v.Color, new { @class = "form-control", placeholder = "Color del Vehículo", autocomplete = "off"})
                            @Html.ValidationMessageFor(v => v.Color)
                        </div>
                    </div>
                </div>
                @Html.HiddenFor(v => v.Id)
                @Html.AntiForgeryToken()
            </div>
            <div class="panel-footer">
                <button class="btn btn-primary">Guardar</button>
            </div>
        </div>
    }
</div>


@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function maxLengthCheck(object) {
            if (object.value.length > object.max.length)
                object.value = object.value.slice(0, object.max.length);
        }

        var id = $("#Id").val();

        if (id == 0) {
            $.validator.setDefaults({
                ignore: "",
                // any other default options and/or rules,
                //errorPlacement: function (error, element) {
                //    console.log("error", error);
                //    console.log("element", element);
                //    if (element.is("[data-role=dropdownlist]")) {
                //        element.closest(".k-widget").after(error);
                //    }
                //}
            });
        }

        function updateCssOnPropertyChange(e) {
            var element = $(e.target);

            element.siblings("span.k-dropdown-wrap")
                   .add(element.siblings("div.k-multiselect-wrap"))
                   .add(element.parent("span.k-numeric-wrap"))
                   .add(element.parent("span.k-picker-wrap"))
                   .toggleClass("k-invalid", element.hasClass("input-validation-error"));
        }

        $(document).ready(function () {
            UseMutationObserver();

            $("#menuTaller").addClass('active');
        });
    </script>
}